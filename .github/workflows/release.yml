on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  releases-main:
    name: Release Main Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows]
        goarch: ["386", amd64]
    steps:
      - name: Get Release Info
        run: |
          {
            echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}"
            echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}"
            echo "OS_NAME=${{ matrix.goos }}"
          } >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.40
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.21.0
          binary_name: "http-win-notice"
          compress_assets: auto
          md5sum: false
          asset_name: "http-win-notice_${{ env.RELEASE_TAG }}_${{ env.OS_NAME }}_${{ matrix.goarch }}"
          ldflags: "-extldflags -static -H windowsgui -s -w -X 'http-win-notice/utils/setting.Version=${{ env.RELEASE_TAG }}'"
          pre_command: go get github.com/akavel/rsrc&&go install github.com/akavel/rsrc&&rsrc -arch ${{ matrix.goarch }} -ico ./utils/icon/logo.ico -o resources.syso&&apt-get update && apt-get install -y mingw-w64 && if [ "${{ matrix.goarch }}" = "amd64" ]; then export CC=x86_64-w64-mingw32-gcc; else export CC=i686-w64-mingw32-gcc; fi && export CGO_ENABLED=1
  releases-forward:
    name: Release Forward Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: ["386", amd64, arm64]
    steps:
      - name: Get Release Info
        run: |
          {
            echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}"
            echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}"
            echo "OS_NAME=${{ matrix.goos }}"
          } >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.40
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.21.0
          binary_name: "forward-server"
          project_path: "./forward/server"
          extra_files: forward/server/config.yml
          compress_assets: auto
          md5sum: false
          asset_name: "forward-server_${{ env.RELEASE_TAG }}_${{ env.OS_NAME }}_${{ matrix.goarch }}"
